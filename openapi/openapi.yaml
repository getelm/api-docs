openapi: 3.0.1
servers: 
  - url: https://api.getelm.co/api
    description: Live API server

info:
  title: Elm API
  version: 1.0.0
  contact:
    name: Contact
    email: hello@getelm.co
  termsOfService: 'https://getelm.co/terms-of-service/'
  description: >
    # Introduction

    Weâ€™ve designed the elm API to give FMCG brands and third parties easier access to their key sales data. See more info below on how to fetch data from the elm API.

    # API Keys

    This API relies on an API key for authentication. To generate/access your
    API key please make sure that you have admin level access to your Elm account. 


    To generate your API key:

    - Log in to your account and, navigate to [Account Settings](https://dashboard.getelm.co/account) 

    - Visit the API tab

    - On this page you will be able to generate an API key, view your key, and regenerate your key if your existing one is lost or exposed.


    Please note that API keys are sensitive pieces of information and as such
    should be kept secret, like a password.


    # Authentication

    Once you have your API key, you can use it for authentication by including
    it in the authorization header of your requests.


    **Headers:**

    ```

    Authorization: Token <your token>

    ```

    ## Example request

    This request can be used to test your connection to the API. A successful
    request and authorization will return `{"success":true}`

    ```

    curl --request GET \
      --url https://api.getelm.co/api/test/ \
      --header 'Authorization: <your token>'
    ```
  
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: Authorization
security:
  - ApiKeyAuth: []
paths:
  /test:
    $ref: paths/test.yaml
  /list?type=retailers:
    $ref: paths/list{retailers}.yaml
  /list?type=metrics&retailer={retailer}:
    $ref: paths/list{metrics}.yaml
  /data?type=sku&retailer={retailer}&timeframe={timeframe}&metric={metric}&datefrom={datefrom}&dateto={dateto}:
    $ref: paths/data{sku}.yaml
  /data?type=store&retailer={retailer}&timeframe={timeframe}&metric={metric}&datefrom={datefrom}&dateto={dateto}:
    $ref: paths/data{store}.yaml
  /actions?retailer={retailer}:
    $ref: paths/actions.yaml
