openapi: 3.0.1
servers:
  - url: https://api.getelm.co
    description: Live API server
info:
  title: Elm API
  version: 1.0.0
  contact:
    name: Contact
    email: hello@getelm.co
  termsOfService: https://getelm.co/terms-of-service/
  description: >
    # Introduction

    We’ve designed the elm API to give FMCG brands and third parties easier
    access to their key sales data. See more info below on how to fetch data
    from the elm API.

    # API Keys

    This API relies on an API key for authentication. To generate/access your
    API key please make sure that you have admin level access to your Elm
    account. 


    To generate your API key:

    - Log in to your account and, navigate to [Account
    Settings](https://dashboard.getelm.co/account) 

    - Visit the API tab

    - On this page you will be able to generate an API key, view your key, and
    regenerate your key if your existing one is lost or exposed.


    Please note that API keys are sensitive pieces of information and as such
    should be kept secret, like a password.


    # Authentication

    Once you have your API key, you can use it for authentication by including
    it in the authorization header of your requests.


    **Headers:**

    ```

    Authorization: Token <your token>

    ```

    ## Example request

    This request can be used to test your connection to the API. A successful
    request and authorization will return `{"success":true}`

    ```

    curl --request GET \
      --url https://api.getelm.co/api/test/ \
      --header 'Authorization: <your token>'
    ```
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: authorization
  schemas:
    errorServer:
      type: object
      properties:
        success:
          type: boolean
          description: A boolean indicating that the query was unsuccessful
        error:
          type: string
          description: Error message
      example:
        success: false
        error: Server error. Please review your request and try again
    dataSku:
      type: object
      properties:
        week:
          type: string
          description: Date string representing the week
        sku:
          type: string
          description: The product SKU
        sku_product_name:
          type: string
          description: The product SKU and product name
        metric_name:
          type: string
          description: >-
            The selected metric. Additional metrics will appear as additional
            properties
      example:
        week: '2022-06-12T23:00:00.000Z'
        sku: 446677
        sku_product_name: 446677 productName
        revenue: 231
    dataStore:
      type: object
      properties:
        week:
          type: string
          description: Date string representing the week
        store_id:
          type: string
          description: The store ID
        store_name:
          type: string
          description: The store name
        sku:
          type: string
          description: The product SKU
        sku_product_name:
          type: string
          description: The product SKU and product name
        metric_name:
          type: string
          description: >-
            The selected metric. Additional metrics will appear as additional
            properties
      example:
        week: '2022-06-12T23:00:00.000Z'
        store_id: 4
        store_name: 4 London
        sku: 446677
        sku_product_name: 446677 productName
        revenue: 44
    action:
      type: object
      properties:
        client_name:
          type: string
          description: The client name.
        alert_date:
          type: string
          description: The date of the alert.
        sku_code:
          type: string
          description: The SKU code.
        sku_description:
          type: string
          description: The SKU name.
        retailer:
          type: string
          description: The retailer name.
        store_id:
          type: string
          description: The store ID.
        store_description:
          type: string
          description: The store name.
        action:
          type: string
          description: The action.
        action_description:
          type: string
          description: The action description.
      example:
        client_name: myCompany
        alert_date: '2022-08-15T23:00:00.000Z'
        sku_code: 33453
        sku_description: 33453 - myCompany greatProduct
        retailer: tesco
        store_id: 1111
        store_description: 3322 London
        action: no_sales
        action_description: No sales recorded for this SKU in 4 weeks
  parameters:
    retailer:
      in: query
      name: retailer
      required: true
      schema:
        type: string
      description: >-
        Name of retailer to pull data from. Use `/list` to list available
        retailer options.
      example: sainsburys
    timeframe:
      in: query
      name: timeframe
      required: true
      schema:
        type: string
        enum:
          - daily
          - weekly
          - monthly
      example: daily
      description: >
        Return data by week or day.


        **Note:** Not all combinations of retailers and metrics will have access
        to daily data.
    datefrom:
      in: query
      name: datefrom
      required: true
      schema:
        type: string
      description: Date from which to begin pulling data in the format YYYY-MM-DD
      example: '2022-08-13'
    dateto:
      in: query
      name: dateto
      required: true
      schema:
        type: string
      description: Date on which to end pulling data in the format YYYY-MM-DD
      example: '2022-10-18'
    sku:
      in: query
      name: sku
      required: false
      schema:
        type: string
      description: SKU code used to filter data down to a specific SKU.
      example: 55467
security:
  - ApiKeyAuth: []
paths:
  /test:
    summary: Test your connection and credentials
    description: >-
      A simple path that can be used to test that you are correctly applying
      your credentials
    get:
      summary: Test your connection
      description: >-
        Test that you are correctly connecting to the API and return a success
        or error message accordingly.
      operationId: test_connection
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: A boolean indicating that the query was successful
                example:
                  success: true
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorServer'
  /list?type=retailers:
    summary: Get available retailers
    description: >-
      This data set returns a list of the retailer connections that a user has
      access to in their elm account. To add further retailers/customers please
      visit the “Manage Connections” section of your elm dashboard.
    get:
      summary: Get available retailers
      parameters:
        - in: query
          name: type
          required: true
          schema:
            type: string
            enum:
              - retailers
          example: retailers
          description: >-
            Returns list of available retailers or available metrics (by
            retailer)
      description: >-
        This data set returns a list of the retailer connections that a user has
        access to in their elm account. To add further retailers/customers
        please visit the “Manage Connections” section of your elm dashboard.
      operationId: get_retailers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example:
                  - amazon
                  - sainsburys
                  - tesco
                  - shopify
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorServer'
      tags:
        - List
  /list?type=metrics&retailer={retailer}:
    summary: Get available metrics
    description: >-
      This endpoint returns a list of the available metrics that can be pulled
      from each data set. This can vary depending on the data connection due to
      the granularity of data available for each retailer.
    get:
      summary: Get available metrics
      parameters:
        - in: query
          name: type
          required: true
          schema:
            type: string
            enum:
              - metrics
          example: metrics
          description: Returns list of available  metrics by retailer
        - in: query
          name: retailer
          required: true
          schema:
            type: string
          example: sainsburys
          description: Define retailer to return list of available metrics
      description: >-
        This endpoint returns a list of the available metrics that can be pulled
        from each data set. This can vary depending on the data connection due
        to the granularity of data available for each retailer.
      operationId: get_retailers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  retailer:
                    type: string
                    description: The selected retailer
                    example: waitrose
                  sku_metrics:
                    type: array
                    items:
                      type: string
                      example: revenue
                    description: Available metrics when returning data by SKU
                  store_metrics:
                    type: array
                    items:
                      type: string
                      example: units
                    description: Available metrics when returning data by store
                example:
                  retailer: tesco
                  sku_metrics:
                    - revenue
                    - units
                    - availability
                    - wastage
                    - unit_ros
                    - value_ros
                    - ranged_stores
                    - stores_selling
                    - stores_with_stock
                  store_metrics:
                    - revenue
                    - units
                    - wastage
                    - lost_sales
                    - unit_ros
                    - value_ros
                    - stock
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorServer'
      tags:
        - List
  /data/type=sku&retailer={retailer}&timeframe={timeframe}&metric={metric}&datefrom={datefrom}&dateto={dateto}:
    summary: Get available metrics
    description: Return data by SKU
    get:
      summary: Return data by SKU
      parameters:
        - in: query
          name: type
          required: true
          schema:
            type: string
            enum:
              - sku
          example: sku
          description: Return data at a SKU or store level
        - $ref: '#/components/parameters/retailer'
        - $ref: '#/components/parameters/timeframe'
        - in: query
          name: metric
          required: true
          schema:
            type: string
            enum:
              - units
              - revenue
              - wastage
              - stock
              - lost_sales
              - availability
              - unit_ros
              - revenue_ros
              - ranged_stores
              - stores_selling
              - stores_with_stock
              - scanning_ros
          description: >
            Which metric(s) should be returned. Multiple metrics can be returned
            in one request when separated by a comma. E.g.
            `metric=revenue,units,stock`


            **Note:** Not all metrics will be available depending on
            retailer/timeframe/type selections. 
          example: revenue
        - $ref: '#/components/parameters/datefrom'
        - $ref: '#/components/parameters/dateto'
        - $ref: '#/components/parameters/sku'
      description: >-
        Use the data by SKU endpoint to retrieve daily sales data by retailer
        and grouped by SKU. This is best used when looking for top level sales
        information, rather than requiring sales by store data - which is on a
        weekly basis.
      operationId: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dataSku'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorServer'
      tags:
        - Data
  /data/type=store&retailer={retailer}&timeframe={timeframe}&metric={metric}&datefrom={datefrom}&dateto={dateto}:
    summary: Get available metrics
    description: >-
      Use the data by Store endpoint to retrieve sales and other data points
      grouped by SKU and store ID / name. This data set is updated on a weekly
      basis. This data is often used when more granular data is required for
      tasks like field team work.
    get:
      summary: Return data by Store
      parameters:
        - in: query
          name: type
          required: true
          schema:
            type: string
            enum:
              - sku
              - store
          example: sku
          description: Return data at a SKU or store level
        - $ref: '#/components/parameters/retailer'
        - in: query
          name: timeframe
          required: true
          schema:
            type: string
            enum:
              - weekly
              - monthly
          example: weekly
          description: |
            Return data by week
        - in: query
          name: metric
          required: true
          schema:
            type: string
            enum:
              - units
              - revenue
              - wastage
              - stock
              - lost_sales
          description: >
            Which metric(s) should be returned. Multiple metrics can be returned
            in one request when separated by a comma. E.g.
            `metric=revenue,units,stock`


            **Note:** Not all metrics will be available depending on
            retailer/timeframe/type selections.
          example: wastage
        - $ref: '#/components/parameters/datefrom'
        - $ref: '#/components/parameters/dateto'
        - $ref: '#/components/parameters/sku'
      description: >-
        Use the data by Store endpoint to retrieve sales and other data points
        grouped by SKU and store ID / name. This data set is updated on a weekly
        basis. This data is often used when more granular data is required for
        tasks like field team work.
      operationId: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dataStore'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorServer'
      tags:
        - Data
  /actions:
    summary: Get all actions
    description: >-
      This data set returns a list of all active actions, insights and alerts as
      set out in your elm account along with accompanying information by
      retailer for a given week. This data set is often used as the first step
      in a successful field visit, for example, as it outlines problem stores.


      Note: Actions are refreshed weekly and so please plan your API requests
      accordingly. We’d recommend pulling through actions on a Tuesday.
    get:
      summary: Get all actions by retailer
      description: >-
        This data set returns a list of all active actions, insights and alerts
        as set out in your elm account along with accompanying information by
        retailer for a given week. This data set is often used as the first step
        in a successful field visit, for example, as it outlines problem stores.


        **Note:** Actions are refreshed weekly and so please plan your API
        requests accordingly. We’d recommend pulling through actions on a
        Tuesday.
      parameters:
        - $ref: '#/components/parameters/retailer'
      operationId: get_actions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/action'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorServer'
      tags:
        - Actions
